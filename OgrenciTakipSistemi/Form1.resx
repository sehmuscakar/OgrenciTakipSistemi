<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>